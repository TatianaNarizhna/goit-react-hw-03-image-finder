{"version":3,"sources":["services/apiService.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","App.js","index.js"],"names":["api","fetchSearch","search","fetch","then","response","ok","json","Promise","reject","Error","SearchBar","state","searchName","handleSearchChange","e","setState","currentTarget","value","toLowerCase","handleFormSubmit","preventDefault","trim","toast","error","props","onSubmit","formReset","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","GalleryItem","id","webformatURL","largeImageURL","src","alt","ImageGallery","images","map","ImageGalleryItem","Button","onClick","App","page","loader","onChangePage","formSubmit","hits","prevState","length","window","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","finally","prevProps","color","height","width","message","position","autoClose","newestOnTop","closeOnClick","rtl","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.74120b03.chunk.js","sourcesContent":["function fetchSearch(search) {\n  return fetch(\n    `https://pixabay.com/api/?q=${search}&page=1&key=21902781-05f70a6abac1a4120ac7c9ed1&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Request ${search} not found`));\n  });\n}\n\nconst api = {\n  fetchSearch,\n};\n\nexport default api;\n","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\n\nexport default class SearchBar extends Component {\n  state = {\n    searchName: \"\",\n  };\n\n  // componentDidMount() {\n  // this.setState({ loader: true });\n\n  //  fetch('https://pixabay.com/api/?q=sea&page=1&key=21902781-05f70a6abac1a4120ac7c9ed1&image_type=photo&orientation=horizontal&per_page=12')\n  //  .then(response => response.json())\n  //  .then(({ hits }) => this.setState({ hits }))\n  //  .finally(() => this.setState({ loader: false }))\n  // }\n\n  handleSearchChange = (e) => {\n    this.setState({ searchName: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.state.searchName.trim() === \"\") {\n      return toast.error(\"Enter correct request!\");\n    }\n    this.props.onSubmit(this.state.searchName);\n    // this.setState({ searchName: \"\" })\n    this.formReset();\n  };\n\n  formReset = () => {\n    this.setState({\n      searchName: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <header className=\"Searchbar\">\n          <form onSubmit={this.handleFormSubmit} className=\"SearchForm\">\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              value={this.state.searchName}\n              autoFocus\n              placeholder=\"Search images and photos\"\n              onChange={this.handleSearchChange}\n            />\n          </form>\n        </header>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst GalleryItem = ({ id, webformatURL, largeImageURL }) => {\n  return (\n    <li className=\"ImageGalleryItem\" key={id}>\n      <img\n        src={webformatURL}\n        alt=\"\"\n        className=\"ImageGalleryItem-image\"\n        data-img={largeImageURL}\n      />\n    </li>\n  );\n};\n\nexport default GalleryItem;\n","import React, { Component } from \"react\";\n// import Loader from \"react-loader-spinner\";\n\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\n// import Button from \"../Button/Button\";\n\nconst ImageGallery = ({ images }) => (\n  <ul className=\"ImageGallery\">\n    {images.map(({ id, webformatURL, largeImageURL }) => (\n      <ImageGalleryItem\n        key={id}\n        webformatURL={webformatURL}\n        largeImageURL={largeImageURL}\n      />\n    ))}\n  </ul>\n);\n\nexport default ImageGallery;\n\n// class ImageGallery extends Component {\n//   state = {\n//     hits: [],\n//     // loader: false,\n//     // error: null,\n\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevProps.searchName !== this.props.searchName) {\n//       this.setState({ loader: true, hits: null });\n\n//       apiService\n//         .fetchSearch(this.props.searchName)\n//         .then(({ hits })  => this.setState({ hits }))\n//         .catch((error) => this.setState({ error }))\n//         // .finally(() => this.setState({ loader: false }));\n//     }\n//   }\n\n//   render() {\n//     const { hits } = this.state;\n//     return (\n//       <div>\n//         {/* {this.state.loader && (\n//           <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n//         )}\n//         {this.state.error && <p>{this.state.error.message}</p>} */}\n\n//         <ul className=\"ImageGallery\">\n//          {hits && [...hits].map(({ id, webformatURL, largeImageURL }) =>\n//          (\n//            <ImageGalleryItem\n//             key={id}\n//             webformatURL={webformatURL}\n//             largeImageURL={largeImageURL}\n//             value={id}\n//             />\n//          ))}\n//         </ul>\n//         {/* <>\n\n//          { hits && <Button onClick={() => this.componentDidUpdate()}/>}\n//         </> */}\n\n//       </div>\n//     );\n//   }\n// }\n\n// export default ImageGallery;\n\n// //  fetch(\n// //   `https://pixabay.com/api/?q=${this.props.searchName}&page=1&key=21902781-05f70a6abac1a4120ac7c9ed1&image_type=photo&orientation=horizontal&per_page=12`\n// // )\n// // .then(response => {\n// //   if(response.ok) {\n// //     return response.json();\n// //   }\n// //       return Promise.reject(\n// //      new Error(`Request ${this.props.searchName} not found`)\n// //    )})\n// //   .then(({ hits }) => this.setState({ hits }))\n// //   .catch(error => this.setState({ error }))\n// //   .finally(() => this.setState({ loader: false }));\n","import React from \"react\";\n\nconst Button = ({ onClick }) => {\n  <button type=\"button\" onClick={onClick}>\n    Load more\n  </button>;\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport api from \"./services/apiService\";\nimport SearchBar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"./components/Button/Button\";\n\nclass App extends Component {\n  state = {\n    searchName: \" \",\n    images: [],\n    page: 1,\n    loader: false,\n    error: null,\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchName !== this.state.searchName) {\n      // this.setState({ loader: true, images: null })\n      this.fetchSearch();\n    }\n  }\n\n  onChangePage = (search) => {\n    this.setState({ searchName: search, page: 1, images: [] });\n  };\n\n  formSubmit = (searchName) => {\n    this.setState({ searchName });\n  };\n\n  fetchSearch = () => {\n    const { searchName, page } = this.state;\n    this.setState({ loader: true });\n    api\n      .fetchSearch(searchName, page)\n      .then((hits) => {\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...hits],\n          page: prevState.page + 1,\n        }));\n        if (this.state.images.length > 12) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loader: false }));\n  };\n\n  render() {\n    const { images, loader } = this.state;\n    return (\n      <div>\n        {loader && (\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n        )}\n        {this.state.error && <p>{this.state.error.message}</p>}\n\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={2000}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n        />\n        <SearchBar onSubmit={this.formSubmit} />\n        <ImageGallery images={images} />\n\n        {images.length > 0 && <Button onClick={this.fetchSearch} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}